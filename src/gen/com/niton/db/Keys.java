/*
 * This file is generated by jOOQ.
 */
package com.niton.db;


import com.niton.db.tables.Apikey;
import com.niton.db.tables.Group;
import com.niton.db.tables.Groupmember;
import com.niton.db.tables.Task;
import com.niton.db.tables.Users;
import com.niton.db.tables.records.ApikeyRecord;
import com.niton.db.tables.records.GroupRecord;
import com.niton.db.tables.records.GroupmemberRecord;
import com.niton.db.tables.records.TaskRecord;
import com.niton.db.tables.records.UsersRecord;

import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>eds</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<ApikeyRecord> KEY_APIKEY_PRIMARY = UniqueKeys0.KEY_APIKEY_PRIMARY;
    public static final UniqueKey<GroupRecord> KEY_GROUP_PRIMARY = UniqueKeys0.KEY_GROUP_PRIMARY;
    public static final UniqueKey<GroupmemberRecord> KEY_GROUPMEMBER_PRIMARY = UniqueKeys0.KEY_GROUPMEMBER_PRIMARY;
    public static final UniqueKey<TaskRecord> KEY_TASK_PRIMARY = UniqueKeys0.KEY_TASK_PRIMARY;
    public static final UniqueKey<UsersRecord> KEY_USERS_PRIMARY = UniqueKeys0.KEY_USERS_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<GroupRecord, UsersRecord> FK_GROUP_USERS1 = ForeignKeys0.FK_GROUP_USERS1;
    public static final ForeignKey<GroupmemberRecord, GroupRecord> FK_GROUPMEMBER_GROUP1 = ForeignKeys0.FK_GROUPMEMBER_GROUP1;
    public static final ForeignKey<GroupmemberRecord, UsersRecord> FK_GROUPMEMBER_USERS1 = ForeignKeys0.FK_GROUPMEMBER_USERS1;
    public static final ForeignKey<TaskRecord, GroupRecord> FK_TASK_GROUP1 = ForeignKeys0.FK_TASK_GROUP1;
    public static final ForeignKey<TaskRecord, UsersRecord> FK_TASK_USERS1 = ForeignKeys0.FK_TASK_USERS1;
    public static final ForeignKey<UsersRecord, ApikeyRecord> FK_USERS_APIKEY = ForeignKeys0.FK_USERS_APIKEY;
    public static final ForeignKey<UsersRecord, GroupRecord> FK_USERS_GROUP1 = ForeignKeys0.FK_USERS_GROUP1;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class UniqueKeys0 {
        public static final UniqueKey<ApikeyRecord> KEY_APIKEY_PRIMARY = Internal.createUniqueKey(Apikey.APIKEY, "KEY_apikey_PRIMARY", Apikey.APIKEY.APIKEY_);
        public static final UniqueKey<GroupRecord> KEY_GROUP_PRIMARY = Internal.createUniqueKey(Group.GROUP, "KEY_group_PRIMARY", Group.GROUP.UID);
        public static final UniqueKey<GroupmemberRecord> KEY_GROUPMEMBER_PRIMARY = Internal.createUniqueKey(Groupmember.GROUPMEMBER, "KEY_groupmember_PRIMARY", Groupmember.GROUPMEMBER.GROUP, Groupmember.GROUPMEMBER.USER);
        public static final UniqueKey<TaskRecord> KEY_TASK_PRIMARY = Internal.createUniqueKey(Task.TASK, "KEY_task_PRIMARY", Task.TASK.NAME, Task.TASK.GROUP_UID, Task.TASK.USERS_EMAIL);
        public static final UniqueKey<UsersRecord> KEY_USERS_PRIMARY = Internal.createUniqueKey(Users.USERS, "KEY_users_PRIMARY", Users.USERS.EMAIL);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<GroupRecord, UsersRecord> FK_GROUP_USERS1 = Internal.createForeignKey(com.niton.db.Keys.KEY_USERS_PRIMARY, Group.GROUP, "fk_group_users1", Group.GROUP.CREATOR);
        public static final ForeignKey<GroupmemberRecord, GroupRecord> FK_GROUPMEMBER_GROUP1 = Internal.createForeignKey(com.niton.db.Keys.KEY_GROUP_PRIMARY, Groupmember.GROUPMEMBER, "fk_groupmember_group1", Groupmember.GROUPMEMBER.GROUP);
        public static final ForeignKey<GroupmemberRecord, UsersRecord> FK_GROUPMEMBER_USERS1 = Internal.createForeignKey(com.niton.db.Keys.KEY_USERS_PRIMARY, Groupmember.GROUPMEMBER, "fk_groupmember_users1", Groupmember.GROUPMEMBER.USER);
        public static final ForeignKey<TaskRecord, GroupRecord> FK_TASK_GROUP1 = Internal.createForeignKey(com.niton.db.Keys.KEY_GROUP_PRIMARY, Task.TASK, "fk_task_group1", Task.TASK.GROUP_UID);
        public static final ForeignKey<TaskRecord, UsersRecord> FK_TASK_USERS1 = Internal.createForeignKey(com.niton.db.Keys.KEY_USERS_PRIMARY, Task.TASK, "fk_task_users1", Task.TASK.USERS_EMAIL);
        public static final ForeignKey<UsersRecord, ApikeyRecord> FK_USERS_APIKEY = Internal.createForeignKey(com.niton.db.Keys.KEY_APIKEY_PRIMARY, Users.USERS, "fk_users_apikey", Users.USERS.APIKEY);
        public static final ForeignKey<UsersRecord, GroupRecord> FK_USERS_GROUP1 = Internal.createForeignKey(com.niton.db.Keys.KEY_GROUP_PRIMARY, Users.USERS, "fk_users_group1", Users.USERS.PRIVATE_GROUP);
    }
}
